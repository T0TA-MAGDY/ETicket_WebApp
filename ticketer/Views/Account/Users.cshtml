
@model IEnumerable<ApplicationUser>

@{
    ViewData["Title"] = "List of all users";
    ViewBag.Hidefooter = true;
}

<link rel="stylesheet" href="~/css/users.css" />



<div class="page-content">
    <div class="popcorn-container"></div>

    <div class="container-center">
        <h2 class="orders-title animate-fade-in">List of all users</h2>

        <div class="table-wrapper animate-fade-in animate-delay">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.FullName)</th>
                        <th>@Html.DisplayNameFor(model => model.UserName)</th>
                        <th>@Html.DisplayNameFor(model => model.Email)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                            <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function createPopcorn() {
            const container = document.querySelector('.popcorn-container');
            const popcorn = document.createElement('div');
            popcorn.classList.add('popcorn');

            // Random X position + duration
            popcorn.style.left = Math.random() * 100 + 'vw';
            popcorn.style.animationDuration = (Math.random() * 2 + 2) + 's';

            container.appendChild(popcorn);

            // Remove it after animation
            setTimeout(() => {
                popcorn.remove();
            }, 4000);
        }

        // Generate multiple at interval
        setInterval(createPopcorn, 1200);
    </script>
}

